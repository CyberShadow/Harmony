### YamlMime:ManagedReference
items:
- uid: HarmonyLib.DelegateTypeFactory
  commentId: T:HarmonyLib.DelegateTypeFactory
  id: DelegateTypeFactory
  parent: HarmonyLib
  children:
  - HarmonyLib.DelegateTypeFactory.#ctor
  - HarmonyLib.DelegateTypeFactory.CreateDelegateType(System.Reflection.MethodInfo)
  langs:
  - csharp
  - vb
  name: DelegateTypeFactory
  nameWithType: DelegateTypeFactory
  fullName: HarmonyLib.DelegateTypeFactory
  type: Class
  source:
    remote:
      path: Harmony/Extras/DelegateTypeFactory.cs
      branch: test-docs
      repo: git@github.com:pardeike/Harmony.git
    id: DelegateTypeFactory
    path: ../Extras/DelegateTypeFactory.cs
    startLine: 7
  assemblies:
  - 0Harmony
  namespace: HarmonyLib
  summary: A factory to create delegate types
  example: []
  syntax:
    content: public class DelegateTypeFactory
    content.vb: Public Class DelegateTypeFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: HarmonyLib.DelegateTypeFactory.#ctor
  commentId: M:HarmonyLib.DelegateTypeFactory.#ctor
  id: '#ctor'
  parent: HarmonyLib.DelegateTypeFactory
  langs:
  - csharp
  - vb
  name: DelegateTypeFactory()
  nameWithType: DelegateTypeFactory.DelegateTypeFactory()
  fullName: HarmonyLib.DelegateTypeFactory.DelegateTypeFactory()
  type: Constructor
  source:
    remote:
      path: Harmony/Extras/DelegateTypeFactory.cs
      branch: test-docs
      repo: git@github.com:pardeike/Harmony.git
    id: .ctor
    path: ../Extras/DelegateTypeFactory.cs
    startLine: 14
  assemblies:
  - 0Harmony
  namespace: HarmonyLib
  summary: Default constructor
  example: []
  syntax:
    content: public DelegateTypeFactory()
    content.vb: Public Sub New
  overload: HarmonyLib.DelegateTypeFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: HarmonyLib.DelegateTypeFactory.CreateDelegateType(System.Reflection.MethodInfo)
  commentId: M:HarmonyLib.DelegateTypeFactory.CreateDelegateType(System.Reflection.MethodInfo)
  id: CreateDelegateType(System.Reflection.MethodInfo)
  parent: HarmonyLib.DelegateTypeFactory
  langs:
  - csharp
  - vb
  name: CreateDelegateType(MethodInfo)
  nameWithType: DelegateTypeFactory.CreateDelegateType(MethodInfo)
  fullName: HarmonyLib.DelegateTypeFactory.CreateDelegateType(System.Reflection.MethodInfo)
  type: Method
  source:
    remote:
      path: Harmony/Extras/DelegateTypeFactory.cs
      branch: test-docs
      repo: git@github.com:pardeike/Harmony.git
    id: CreateDelegateType
    path: ../Extras/DelegateTypeFactory.cs
    startLine: 26
  assemblies:
  - 0Harmony
  namespace: HarmonyLib
  summary: Creates a delegate type for a method
  example: []
  syntax:
    content: public Type CreateDelegateType(MethodInfo method)
    parameters:
    - id: method
      type: System.Reflection.MethodInfo
      description: The method
    return:
      type: System.Type
      description: The new delegate type
    content.vb: Public Function CreateDelegateType(method As MethodInfo) As Type
  overload: HarmonyLib.DelegateTypeFactory.CreateDelegateType*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: HarmonyLib
  commentId: N:HarmonyLib
  name: HarmonyLib
  nameWithType: HarmonyLib
  fullName: HarmonyLib
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: HarmonyLib.DelegateTypeFactory.#ctor*
  commentId: Overload:HarmonyLib.DelegateTypeFactory.#ctor
  name: DelegateTypeFactory
  nameWithType: DelegateTypeFactory.DelegateTypeFactory
  fullName: HarmonyLib.DelegateTypeFactory.DelegateTypeFactory
- uid: HarmonyLib.DelegateTypeFactory.CreateDelegateType*
  commentId: Overload:HarmonyLib.DelegateTypeFactory.CreateDelegateType
  name: CreateDelegateType
  nameWithType: DelegateTypeFactory.CreateDelegateType
  fullName: HarmonyLib.DelegateTypeFactory.CreateDelegateType
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
