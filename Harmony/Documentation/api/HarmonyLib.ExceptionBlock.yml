### YamlMime:ManagedReference
items:
- uid: HarmonyLib.ExceptionBlock
  commentId: T:HarmonyLib.ExceptionBlock
  id: ExceptionBlock
  parent: HarmonyLib
  children:
  - HarmonyLib.ExceptionBlock.#ctor(HarmonyLib.ExceptionBlockType,System.Type)
  - HarmonyLib.ExceptionBlock.blockType
  - HarmonyLib.ExceptionBlock.catchType
  langs:
  - csharp
  - vb
  name: ExceptionBlock
  nameWithType: ExceptionBlock
  fullName: HarmonyLib.ExceptionBlock
  type: Class
  source:
    remote:
      path: Harmony/Public/ExceptionBlock.cs
      branch: master
      repo: git@github.com:pardeike/Harmony.git
    id: ExceptionBlock
    path: ../Public/ExceptionBlock.cs
    startLine: 22
  assemblies:
  - 0Harmony
  namespace: HarmonyLib
  summary: An exception block
  example: []
  syntax:
    content: public class ExceptionBlock
    content.vb: Public Class ExceptionBlock
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: HarmonyLib.ExceptionBlock.blockType
  commentId: F:HarmonyLib.ExceptionBlock.blockType
  id: blockType
  parent: HarmonyLib.ExceptionBlock
  langs:
  - csharp
  - vb
  name: blockType
  nameWithType: ExceptionBlock.blockType
  fullName: HarmonyLib.ExceptionBlock.blockType
  type: Field
  source:
    remote:
      path: Harmony/Public/ExceptionBlock.cs
      branch: master
      repo: git@github.com:pardeike/Harmony.git
    id: blockType
    path: ../Public/ExceptionBlock.cs
    startLine: 25
  assemblies:
  - 0Harmony
  namespace: HarmonyLib
  summary: Block type
  example: []
  syntax:
    content: public ExceptionBlockType blockType
    return:
      type: HarmonyLib.ExceptionBlockType
    content.vb: Public blockType As ExceptionBlockType
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: HarmonyLib.ExceptionBlock.catchType
  commentId: F:HarmonyLib.ExceptionBlock.catchType
  id: catchType
  parent: HarmonyLib.ExceptionBlock
  langs:
  - csharp
  - vb
  name: catchType
  nameWithType: ExceptionBlock.catchType
  fullName: HarmonyLib.ExceptionBlock.catchType
  type: Field
  source:
    remote:
      path: Harmony/Public/ExceptionBlock.cs
      branch: master
      repo: git@github.com:pardeike/Harmony.git
    id: catchType
    path: ../Public/ExceptionBlock.cs
    startLine: 28
  assemblies:
  - 0Harmony
  namespace: HarmonyLib
  summary: Catch type
  example: []
  syntax:
    content: public Type catchType
    return:
      type: System.Type
    content.vb: Public catchType As Type
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: HarmonyLib.ExceptionBlock.#ctor(HarmonyLib.ExceptionBlockType,System.Type)
  commentId: M:HarmonyLib.ExceptionBlock.#ctor(HarmonyLib.ExceptionBlockType,System.Type)
  id: '#ctor(HarmonyLib.ExceptionBlockType,System.Type)'
  parent: HarmonyLib.ExceptionBlock
  langs:
  - csharp
  - vb
  name: ExceptionBlock(ExceptionBlockType, Type)
  nameWithType: ExceptionBlock.ExceptionBlock(ExceptionBlockType, Type)
  fullName: HarmonyLib.ExceptionBlock.ExceptionBlock(HarmonyLib.ExceptionBlockType, System.Type)
  type: Constructor
  source:
    remote:
      path: Harmony/Public/ExceptionBlock.cs
      branch: master
      repo: git@github.com:pardeike/Harmony.git
    id: .ctor
    path: ../Public/ExceptionBlock.cs
    startLine: 34
  assemblies:
  - 0Harmony
  namespace: HarmonyLib
  summary: Creates an exception block
  example: []
  syntax:
    content: public ExceptionBlock(ExceptionBlockType blockType, Type catchType = null)
    parameters:
    - id: blockType
      type: HarmonyLib.ExceptionBlockType
      description: Block type
    - id: catchType
      type: System.Type
      description: Catch type
    content.vb: Public Sub New(blockType As ExceptionBlockType, catchType As Type = Nothing)
  overload: HarmonyLib.ExceptionBlock.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: HarmonyLib
  commentId: N:HarmonyLib
  name: HarmonyLib
  nameWithType: HarmonyLib
  fullName: HarmonyLib
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: HarmonyLib.ExceptionBlockType
  commentId: T:HarmonyLib.ExceptionBlockType
  parent: HarmonyLib
  name: ExceptionBlockType
  nameWithType: ExceptionBlockType
  fullName: HarmonyLib.ExceptionBlockType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: HarmonyLib.ExceptionBlock.#ctor*
  commentId: Overload:HarmonyLib.ExceptionBlock.#ctor
  name: ExceptionBlock
  nameWithType: ExceptionBlock.ExceptionBlock
  fullName: HarmonyLib.ExceptionBlock.ExceptionBlock
