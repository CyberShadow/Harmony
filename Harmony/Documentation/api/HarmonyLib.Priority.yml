### YamlMime:ManagedReference
items:
- uid: HarmonyLib.Priority
  commentId: T:HarmonyLib.Priority
  id: Priority
  parent: HarmonyLib
  children:
  - HarmonyLib.Priority.First
  - HarmonyLib.Priority.High
  - HarmonyLib.Priority.HigherThanNormal
  - HarmonyLib.Priority.Last
  - HarmonyLib.Priority.Low
  - HarmonyLib.Priority.LowerThanNormal
  - HarmonyLib.Priority.Normal
  - HarmonyLib.Priority.VeryHigh
  - HarmonyLib.Priority.VeryLow
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: Priority
  fullName: HarmonyLib.Priority
  type: Class
  source:
    remote:
      path: Harmony/Public/Priority.cs
      branch: master
      repo: git@github.com:pardeike/Harmony.git
    id: Priority
    path: ../Public/Priority.cs
    startLine: 3
  assemblies:
  - 0Harmony
  namespace: HarmonyLib
  summary: A patch priority
  example: []
  syntax:
    content: public static class Priority
    content.vb: Public Module Priority
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: HarmonyLib.Priority.Last
  commentId: F:HarmonyLib.Priority.Last
  id: Last
  parent: HarmonyLib.Priority
  langs:
  - csharp
  - vb
  name: Last
  nameWithType: Priority.Last
  fullName: HarmonyLib.Priority.Last
  type: Field
  source:
    remote:
      path: Harmony/Public/Priority.cs
      branch: master
      repo: git@github.com:pardeike/Harmony.git
    id: Last
    path: ../Public/Priority.cs
    startLine: 6
  assemblies:
  - 0Harmony
  namespace: HarmonyLib
  summary: Patch last
  example: []
  syntax:
    content: public const int Last = 0
    return:
      type: System.Int32
    content.vb: Public Const Last As Integer = 0
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: HarmonyLib.Priority.VeryLow
  commentId: F:HarmonyLib.Priority.VeryLow
  id: VeryLow
  parent: HarmonyLib.Priority
  langs:
  - csharp
  - vb
  name: VeryLow
  nameWithType: Priority.VeryLow
  fullName: HarmonyLib.Priority.VeryLow
  type: Field
  source:
    remote:
      path: Harmony/Public/Priority.cs
      branch: master
      repo: git@github.com:pardeike/Harmony.git
    id: VeryLow
    path: ../Public/Priority.cs
    startLine: 8
  assemblies:
  - 0Harmony
  namespace: HarmonyLib
  summary: Patch with very low priority
  example: []
  syntax:
    content: public const int VeryLow = 100
    return:
      type: System.Int32
    content.vb: Public Const VeryLow As Integer = 100
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: HarmonyLib.Priority.Low
  commentId: F:HarmonyLib.Priority.Low
  id: Low
  parent: HarmonyLib.Priority
  langs:
  - csharp
  - vb
  name: Low
  nameWithType: Priority.Low
  fullName: HarmonyLib.Priority.Low
  type: Field
  source:
    remote:
      path: Harmony/Public/Priority.cs
      branch: master
      repo: git@github.com:pardeike/Harmony.git
    id: Low
    path: ../Public/Priority.cs
    startLine: 10
  assemblies:
  - 0Harmony
  namespace: HarmonyLib
  summary: Patch with low priority
  example: []
  syntax:
    content: public const int Low = 200
    return:
      type: System.Int32
    content.vb: Public Const Low As Integer = 200
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: HarmonyLib.Priority.LowerThanNormal
  commentId: F:HarmonyLib.Priority.LowerThanNormal
  id: LowerThanNormal
  parent: HarmonyLib.Priority
  langs:
  - csharp
  - vb
  name: LowerThanNormal
  nameWithType: Priority.LowerThanNormal
  fullName: HarmonyLib.Priority.LowerThanNormal
  type: Field
  source:
    remote:
      path: Harmony/Public/Priority.cs
      branch: master
      repo: git@github.com:pardeike/Harmony.git
    id: LowerThanNormal
    path: ../Public/Priority.cs
    startLine: 12
  assemblies:
  - 0Harmony
  namespace: HarmonyLib
  summary: Patch with lower than normal priority
  example: []
  syntax:
    content: public const int LowerThanNormal = 300
    return:
      type: System.Int32
    content.vb: Public Const LowerThanNormal As Integer = 300
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: HarmonyLib.Priority.Normal
  commentId: F:HarmonyLib.Priority.Normal
  id: Normal
  parent: HarmonyLib.Priority
  langs:
  - csharp
  - vb
  name: Normal
  nameWithType: Priority.Normal
  fullName: HarmonyLib.Priority.Normal
  type: Field
  source:
    remote:
      path: Harmony/Public/Priority.cs
      branch: master
      repo: git@github.com:pardeike/Harmony.git
    id: Normal
    path: ../Public/Priority.cs
    startLine: 14
  assemblies:
  - 0Harmony
  namespace: HarmonyLib
  summary: Patch with normal priority
  example: []
  syntax:
    content: public const int Normal = 400
    return:
      type: System.Int32
    content.vb: Public Const Normal As Integer = 400
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: HarmonyLib.Priority.HigherThanNormal
  commentId: F:HarmonyLib.Priority.HigherThanNormal
  id: HigherThanNormal
  parent: HarmonyLib.Priority
  langs:
  - csharp
  - vb
  name: HigherThanNormal
  nameWithType: Priority.HigherThanNormal
  fullName: HarmonyLib.Priority.HigherThanNormal
  type: Field
  source:
    remote:
      path: Harmony/Public/Priority.cs
      branch: master
      repo: git@github.com:pardeike/Harmony.git
    id: HigherThanNormal
    path: ../Public/Priority.cs
    startLine: 16
  assemblies:
  - 0Harmony
  namespace: HarmonyLib
  summary: Patch with higher than normal priority
  example: []
  syntax:
    content: public const int HigherThanNormal = 500
    return:
      type: System.Int32
    content.vb: Public Const HigherThanNormal As Integer = 500
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: HarmonyLib.Priority.High
  commentId: F:HarmonyLib.Priority.High
  id: High
  parent: HarmonyLib.Priority
  langs:
  - csharp
  - vb
  name: High
  nameWithType: Priority.High
  fullName: HarmonyLib.Priority.High
  type: Field
  source:
    remote:
      path: Harmony/Public/Priority.cs
      branch: master
      repo: git@github.com:pardeike/Harmony.git
    id: High
    path: ../Public/Priority.cs
    startLine: 18
  assemblies:
  - 0Harmony
  namespace: HarmonyLib
  summary: Patch with high priority
  example: []
  syntax:
    content: public const int High = 600
    return:
      type: System.Int32
    content.vb: Public Const High As Integer = 600
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: HarmonyLib.Priority.VeryHigh
  commentId: F:HarmonyLib.Priority.VeryHigh
  id: VeryHigh
  parent: HarmonyLib.Priority
  langs:
  - csharp
  - vb
  name: VeryHigh
  nameWithType: Priority.VeryHigh
  fullName: HarmonyLib.Priority.VeryHigh
  type: Field
  source:
    remote:
      path: Harmony/Public/Priority.cs
      branch: master
      repo: git@github.com:pardeike/Harmony.git
    id: VeryHigh
    path: ../Public/Priority.cs
    startLine: 20
  assemblies:
  - 0Harmony
  namespace: HarmonyLib
  summary: Patch with very high priority
  example: []
  syntax:
    content: public const int VeryHigh = 700
    return:
      type: System.Int32
    content.vb: Public Const VeryHigh As Integer = 700
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: HarmonyLib.Priority.First
  commentId: F:HarmonyLib.Priority.First
  id: First
  parent: HarmonyLib.Priority
  langs:
  - csharp
  - vb
  name: First
  nameWithType: Priority.First
  fullName: HarmonyLib.Priority.First
  type: Field
  source:
    remote:
      path: Harmony/Public/Priority.cs
      branch: master
      repo: git@github.com:pardeike/Harmony.git
    id: First
    path: ../Public/Priority.cs
    startLine: 22
  assemblies:
  - 0Harmony
  namespace: HarmonyLib
  summary: Patch first
  example: []
  syntax:
    content: public const int First = 800
    return:
      type: System.Int32
    content.vb: Public Const First As Integer = 800
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: HarmonyLib
  commentId: N:HarmonyLib
  name: HarmonyLib
  nameWithType: HarmonyLib
  fullName: HarmonyLib
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
