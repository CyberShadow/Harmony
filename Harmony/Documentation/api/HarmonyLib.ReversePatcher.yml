### YamlMime:ManagedReference
items:
- uid: HarmonyLib.ReversePatcher
  commentId: T:HarmonyLib.ReversePatcher
  id: ReversePatcher
  parent: HarmonyLib
  children:
  - HarmonyLib.ReversePatcher.#ctor(HarmonyLib.Harmony,System.Reflection.MethodBase,HarmonyLib.HarmonyMethod)
  - HarmonyLib.ReversePatcher.Patch(HarmonyLib.HarmonyReversePatchType)
  langs:
  - csharp
  - vb
  name: ReversePatcher
  nameWithType: ReversePatcher
  fullName: HarmonyLib.ReversePatcher
  type: Class
  source:
    remote:
      path: Harmony/Public/ReversePatcher.cs
      branch: master
      repo: git@github.com:pardeike/Harmony.git
    id: ReversePatcher
    path: ../Public/ReversePatcher.cs
    startLine: 21
  assemblies:
  - 0Harmony
  namespace: HarmonyLib
  summary: A reverse patcher
  example: []
  syntax:
    content: public class ReversePatcher
    content.vb: Public Class ReversePatcher
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: HarmonyLib.ReversePatcher.#ctor(HarmonyLib.Harmony,System.Reflection.MethodBase,HarmonyLib.HarmonyMethod)
  commentId: M:HarmonyLib.ReversePatcher.#ctor(HarmonyLib.Harmony,System.Reflection.MethodBase,HarmonyLib.HarmonyMethod)
  id: '#ctor(HarmonyLib.Harmony,System.Reflection.MethodBase,HarmonyLib.HarmonyMethod)'
  parent: HarmonyLib.ReversePatcher
  langs:
  - csharp
  - vb
  name: ReversePatcher(Harmony, MethodBase, HarmonyMethod)
  nameWithType: ReversePatcher.ReversePatcher(Harmony, MethodBase, HarmonyMethod)
  fullName: HarmonyLib.ReversePatcher.ReversePatcher(HarmonyLib.Harmony, System.Reflection.MethodBase, HarmonyLib.HarmonyMethod)
  type: Constructor
  source:
    remote:
      path: Harmony/Public/ReversePatcher.cs
      branch: master
      repo: git@github.com:pardeike/Harmony.git
    id: .ctor
    path: ../Public/ReversePatcher.cs
    startLine: 32
  assemblies:
  - 0Harmony
  namespace: HarmonyLib
  summary: Creates an empty reverse patcher
  example: []
  syntax:
    content: public ReversePatcher(Harmony instance, MethodBase original, HarmonyMethod standin)
    parameters:
    - id: instance
      type: HarmonyLib.Harmony
      description: The Harmony instance
    - id: original
      type: System.Reflection.MethodBase
      description: The original method
    - id: standin
      type: HarmonyLib.HarmonyMethod
      description: The stand-in method
    content.vb: Public Sub New(instance As Harmony, original As MethodBase, standin As HarmonyMethod)
  overload: HarmonyLib.ReversePatcher.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: HarmonyLib.ReversePatcher.Patch(HarmonyLib.HarmonyReversePatchType)
  commentId: M:HarmonyLib.ReversePatcher.Patch(HarmonyLib.HarmonyReversePatchType)
  id: Patch(HarmonyLib.HarmonyReversePatchType)
  parent: HarmonyLib.ReversePatcher
  langs:
  - csharp
  - vb
  name: Patch(HarmonyReversePatchType)
  nameWithType: ReversePatcher.Patch(HarmonyReversePatchType)
  fullName: HarmonyLib.ReversePatcher.Patch(HarmonyLib.HarmonyReversePatchType)
  type: Method
  source:
    remote:
      path: Harmony/Public/ReversePatcher.cs
      branch: master
      repo: git@github.com:pardeike/Harmony.git
    id: Patch
    path: ../Public/ReversePatcher.cs
    startLine: 41
  assemblies:
  - 0Harmony
  namespace: HarmonyLib
  summary: Applies the patch
  example: []
  syntax:
    content: public MethodInfo Patch(HarmonyReversePatchType type = HarmonyReversePatchType.Original)
    parameters:
    - id: type
      type: HarmonyLib.HarmonyReversePatchType
    return:
      type: System.Reflection.MethodInfo
    content.vb: Public Function Patch(type As HarmonyReversePatchType = HarmonyReversePatchType.Original) As MethodInfo
  overload: HarmonyLib.ReversePatcher.Patch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: HarmonyLib
  commentId: N:HarmonyLib
  name: HarmonyLib
  nameWithType: HarmonyLib
  fullName: HarmonyLib
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: HarmonyLib.ReversePatcher.#ctor*
  commentId: Overload:HarmonyLib.ReversePatcher.#ctor
  name: ReversePatcher
  nameWithType: ReversePatcher.ReversePatcher
  fullName: HarmonyLib.ReversePatcher.ReversePatcher
- uid: HarmonyLib.Harmony
  commentId: T:HarmonyLib.Harmony
  parent: HarmonyLib
  name: Harmony
  nameWithType: Harmony
  fullName: HarmonyLib.Harmony
- uid: System.Reflection.MethodBase
  commentId: T:System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: true
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: HarmonyLib.HarmonyMethod
  commentId: T:HarmonyLib.HarmonyMethod
  parent: HarmonyLib
  name: HarmonyMethod
  nameWithType: HarmonyMethod
  fullName: HarmonyLib.HarmonyMethod
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: HarmonyLib.ReversePatcher.Patch*
  commentId: Overload:HarmonyLib.ReversePatcher.Patch
  name: Patch
  nameWithType: ReversePatcher.Patch
  fullName: HarmonyLib.ReversePatcher.Patch
- uid: HarmonyLib.HarmonyReversePatchType
  commentId: T:HarmonyLib.HarmonyReversePatchType
  parent: HarmonyLib
  name: HarmonyReversePatchType
  nameWithType: HarmonyReversePatchType
  fullName: HarmonyLib.HarmonyReversePatchType
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
